let
    CustomSplit = (sourceTable as table, sourceColumn as text) =>
    let
        // Function to determine if the first 10 characters are a date
        IsDateInFirstTen = (text) => try Date.From(Text.Start(text, 10)) otherwise null,

        // Function to perform the split based on the first 10 characters being a date or not
        SplitFunction = (row) => 
            let
                val = row[sourceColumn],
                isDate = IsDateInFirstTen(val),
                splitResult = if isDate = null then
                    Table.FromList(Splitter.SplitTextByPositions({0, 50, 120})(val), Splitter.SplitByNothing(), null, null, ExtraValues.Error)
                else
                    Table.FromList(Splitter.SplitTextByPositions({0, 12, 156, 190})(val), Splitter.SplitByNothing(), null, null, ExtraValues.Error),
                renamedResult = if isDate = null then
                    Table.RenameColumns(splitResult, {{"Column1", "A"}, {"Column2", "C"}})
                else
                    Table.RenameColumns(splitResult, {{"Column1", "A"}, {"Column2", "B"}, {"Column3", "C"}})
            in
                renamedResult,

        // Apply the split function to each row and create new columns
        WithSplits = Table.TransformColumns(sourceTable, {{sourceColumn, each SplitFunction(_), type table}}),

        // Expand the table into new columns
        ExpandedSplits = Table.ExpandTableColumn(WithSplits, sourceColumn, {"A", "B", "C"}, {"A", "B", "C"})
    in
        ExpandedSplits
in
    CustomSplit
